/* src/components/common/Input/Input.module.css - COMPLETE IMPLEMENTATION */
.inputContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
  background-color: rgba(42, 46, 57, 0.5);
  border: 1px solid var(--color-divider);
  border-radius: var(--border-radius-s);
  transition: all var(--transition-fast);
  font-family: var(--font-family);
  overflow: hidden;
}

.inputWrapper:hover:not(.disabled):not(.readOnly) {
  border-color: var(--color-accent);
}

.inputWrapper.focused {
  border-color: var(--color-accent);
  box-shadow: 0 0 0 1px var(--color-accent);
}

.inputWrapper.disabled {
  background-color: rgba(42, 46, 57, 0.2);
  cursor: not-allowed;
  opacity: 0.6;
}

.inputWrapper.readOnly {
  background-color: rgba(42, 46, 57, 0.3);
  cursor: default;
}

.inputWrapper.bordered {
  border: 1px solid var(--color-divider);
}

/* Status states */
.inputWrapper.error {
  border-color: var(--color-negative);
}

.inputWrapper.error.focused {
  border-color: var(--color-negative);
  box-shadow: 0 0 0 1px var(--color-negative);
}

.inputWrapper.warning {
  border-color: var(--color-neutral-2);
}

.inputWrapper.warning.focused {
  border-color: var(--color-neutral-2);
  box-shadow: 0 0 0 1px var(--color-neutral-2);
}

.inputWrapper.success {
  border-color: var(--color-positive);
}

.inputWrapper.success.focused {
  border-color: var(--color-positive);
  box-shadow: 0 0 0 1px var(--color-positive);
}

/* Sizes */
.inputWrapper.small {
  min-height: 32px;
  font-size: var(--font-size-caption);
}

.inputWrapper.middle {
  min-height: 40px;
  font-size: var(--font-size-body);
}

.inputWrapper.large {
  min-height: 48px;
  font-size: var(--font-size-h3);
}

/* Inner container */
.inputInner {
  display: flex;
  align-items: center;
  flex: 1;
  min-width: 0;
}

/* Input element */
.input {
  flex: 1;
  padding: 8px 12px;
  background: transparent;
  border: none;
  outline: none;
  font-family: var(--font-family);
  font-size: inherit;
  color: var(--color-text-light);
  width: 100%;
  min-width: 0;
}

.input::placeholder {
  color: var(--color-neutral-gray);
}

.input:disabled {
  cursor: not-allowed;
  color: var(--color-disabled);
}

.input:read-only {
  cursor: default;
}

/* Size adjustments for input */
.small .input {
  padding: 6px 8px;
}

.large .input {
  padding: 12px 16px;
}

/* Prefix and suffix */
.inputPrefix,
.inputSuffix {
  display: flex;
  align-items: center;
  color: var(--color-neutral-gray);
  flex-shrink: 0;
}

.inputPrefix {
  padding-left: 12px;
  padding-right: 8px;
}

.inputSuffix {
  padding-left: 8px;
  padding-right: 12px;
}

.small .inputPrefix {
  padding-left: 8px;
  padding-right: 4px;
}

.small .inputSuffix {
  padding-left: 4px;
  padding-right: 8px;
}

.large .inputPrefix {
  padding-left: 16px;
  padding-right: 12px;
}

.large .inputSuffix {
  padding-left: 12px;
  padding-right: 16px;
}

/* Adjust input padding when prefix/suffix present */
.hasPrefix .input {
  padding-left: 0;
}

.hasSuffix .input {
  padding-right: 0;
}

/* Clear button */
.clearButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 16px;
  height: 16px;
  border: none;
  background: transparent;
  color: var(--color-neutral-gray);
  cursor: pointer;
  border-radius: var(--border-radius-xs);
  transition: all var(--transition-fast);
  margin-right: 4px;
}

.clearButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--color-text-light);
}

.clearButton:focus {
  outline: 2px solid var(--color-accent);
  outline-offset: 1px;
}

/* Addons */
.inputAddonBefore,
.inputAddonAfter {
  display: flex;
  align-items: center;
  padding: 0 12px;
  background-color: rgba(42, 46, 57, 0.8);
  border: 1px solid var(--color-divider);
  color: var(--color-text-light);
  font-size: inherit;
  line-height: 1;
  white-space: nowrap;
  flex-shrink: 0;
}

.inputAddonBefore {
  border-right: none;
  border-radius: var(--border-radius-s) 0 0 var(--border-radius-s);
}

.inputAddonAfter {
  border-left: none;
  border-radius: 0 var(--border-radius-s) var(--border-radius-s) 0;
}

.hasAddonBefore .inputInner {
  border-radius: 0 var(--border-radius-s) var(--border-radius-s) 0;
  border-left: none;
}

.hasAddonAfter .inputInner {
  border-radius: var(--border-radius-s) 0 0 var(--border-radius-s);
  border-right: none;
}

.hasAddonBefore.hasAddonAfter .inputInner {
  border-radius: 0;
  border-left: none;
  border-right: none;
}

.small .inputAddonBefore,
.small .inputAddonAfter {
  padding: 0 8px;
  font-size: var(--font-size-caption);
}

.large .inputAddonBefore,
.large .inputAddonAfter {
  padding: 0 16px;
  font-size: var(--font-size-h3);
}

/* Character count */
.inputCount {
  display: flex;
  justify-content: flex-end;
  margin-top: var(--spacing-xs);
  font-size: var(--font-size-caption);
  color: var(--color-neutral-gray);
  line-height: 1;
}

.inputCount.countExceeded {
  color: var(--color-negative);
}

.exceeded {
  border-color: var(--color-negative);
}

.exceeded.focused {
  border-color: var(--color-negative);
  box-shadow: 0 0 0 1px var(--color-negative);
}

/* Number input adjustments */
.input[type="number"] {
  -moz-appearance: textfield;
}

.input[type="number"]::-webkit-outer-spin-button,
.input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Password input toggle (if needed in future) */
.input[type="password"] {
  font-family: text-security-disc, -webkit-text-security, monospace;
}

/* Search input adjustments */
.input[type="search"] {
  -webkit-appearance: none;
}

.input[type="search"]::-webkit-search-decoration,
.input[type="search"]::-webkit-search-cancel-button,
.input[type="search"]::-webkit-search-results-button,
.input[type="search"]::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

/* Responsive design */
@media (max-width: 768px) {
  .inputWrapper {
    min-height: 44px; /* Better touch targets */
  }

  .small {
    min-height: 40px;
  }

  .large {
    min-height: 52px;
  }

  .input {
    font-size: var(--font-size-body);
  }

  .small .input {
    font-size: var(--font-size-body);
  }

  .large .input {
    font-size: var(--font-size-h3);
  }

  .clearButton {
    width: 20px;
    height: 20px;
  }
}

@media (max-width: 480px) {
  .inputWrapper {
    border-radius: var(--border-radius-s);
  }

  .input {
    padding: 12px 16px;
  }

  .small .input {
    padding: 8px 12px;
  }

  .large .input {
    padding: 16px 20px;
  }

  .inputAddonBefore,
  .inputAddonAfter {
    padding: 0 8px;
    font-size: var(--font-size-caption);
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .inputWrapper {
    border-width: 2px;
    background-color: var(--color-background);
  }

  .inputWrapper:hover:not(.disabled):not(.readOnly) {
    border-color: var(--color-text-light);
  }

  .inputWrapper.focused {
    border-color: var(--color-text-light);
    box-shadow: 0 0 0 2px var(--color-text-light);
  }

  .input {
    color: var(--color-text-light);
  }

  .inputAddonBefore,
  .inputAddonAfter {
    background-color: var(--color-background);
    border-color: var(--color-text-light);
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .inputWrapper,
  .clearButton {
    transition: none;
  }
}

/* Focus visible */
.input:focus-visible {
  outline: none; /* Handled by wrapper */
}

/* RTL support */
[dir="rtl"] .inputPrefix {
  padding-left: 8px;
  padding-right: 12px;
}

[dir="rtl"] .inputSuffix {
  padding-left: 12px;
  padding-right: 8px;
}

[dir="rtl"] .clearButton {
  margin-left: 4px;
  margin-right: 0;
}

[dir="rtl"] .inputAddonBefore {
  border-left: none;
  border-right: 1px solid var(--color-divider);
  border-radius: 0 var(--border-radius-s) var(--border-radius-s) 0;
}

[dir="rtl"] .inputAddonAfter {
  border-right: none;
  border-left: 1px solid var(--color-divider);
  border-radius: var(--border-radius-s) 0 0 var(--border-radius-s);
}

/* Loading state */
.inputWrapper[aria-busy="true"] {
  pointer-events: none;
  opacity: 0.7;
}

.inputWrapper[aria-busy="true"]::after {
  content: "";
  position: absolute;
  right: 12px;
  width: 14px;
  height: 14px;
  border: 2px solid var(--color-accent);
  border-top: 2px solid transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Print styles */
@media print {
  .inputWrapper {
    background: white !important;
    color: black !important;
    border: 1px solid black !important;
  }

  .input {
    color: black !important;
  }

  .clearButton {
    display: none;
  }
}

/* Custom validation styles */
.inputWrapper[aria-invalid="true"] {
  border-color: var(--color-negative);
}

.inputWrapper[aria-invalid="true"].focused {
  border-color: var(--color-negative);
  box-shadow: 0 0 0 1px var(--color-negative);
}